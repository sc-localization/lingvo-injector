name: Check PR to main branch (Lint, Format, Build)

on:
  pull_request:
    branches: [main]

jobs:
  lint-and-format-check:
    name: Lint & Format Check
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Cache Node.js modules
        uses: actions/cache@v4
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: ${{ runner.os }}-node-

      - name: Install Frontend Dependencies
        run: npm ci

      - name: Run ESLint Check
        run: npm run lint

  tauri-build-check:
    name: Tauri Build Check
    needs: [lint-and-format-check]
    environment: pr-check
    strategy:
      fail-fast: false
      matrix:
        platform: [ubuntu-latest, windows-latest]

    runs-on: ${{ matrix.platform }}

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Cache Node.js modules
        uses: actions/cache@v4
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: ${{ runner.os }}-node-

      - name: Install Frontend Dependencies
        run: npm ci

      - name: Cache Rust dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo
            ./src-tauri/target
          key: ${{ runner.os }}-rust-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: ${{ runner.os }}-rust-

      - name: Disable Updater for CI Build
        run: |
          npm install --no-save jsonfile
          node -e "const fs = require('jsonfile'); const config = fs.readFileSync('src-tauri/tauri.conf.json'); config.updater.active = false; fs.writeFileSync('src-tauri/tauri.conf.json', config);"

      - name: Install Rust stable
        uses: dtolnay/rust-toolchain@stable

      - name: Install Dependencies (Linux only)
        if: runner.os == 'Linux'
        run: |
          sudo apt update
          sudo apt install -y libgtk-3-dev libwebkit2gtk-4.1-dev libappindicator3-dev librsvg2-dev patchelf

      - name: Run Tauri Build Check
        run: npm run tauri build
