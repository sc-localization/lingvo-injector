name: Check PR to main branch (Lint, Format, Build)

on:
  pull_request:
    branches: [main]

jobs:
  lint-and-format-check:
    name: Lint & Format Check
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install Frontend Dependencies
        run: npm install

      - name: Run ESLint Check
        run: npm run lint

      - name: Check Code Formatting
        run: |
          npx prettier --check "./**/*.{js,jsx,ts,tsx,json,css,scss,md}" || {
            echo "::error file=.:: Code formatting errors found. Please run 'npm run format' locally to fix them."
            exit 1
          }

  tauri-build-check:
    name: Tauri Build Check
    needs: [lint-and-format-check]

    strategy:
      fail-fast: false
      matrix:
        platform: [ubuntu-latest, windows-latest]

    runs-on: ${{ matrix.platform }}

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install Frontend Dependencies
        run: npm install

      - name: Install Rust stable
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.platform == 'macos-latest' && 'aarch64-apple-darwin,x86_64-apple-darwin' || '' }}

      - name: Install Dependencies (Linux only)
        if: runner.os == 'Linux'
        run: |
          sudo apt update
          sudo apt install -y libgtk-3-dev libwebkit2gtk-4.1-dev libappindicator3-dev librsvg2-dev patchelf

      - name: Run Tauri Build Check (Windows Only)
        if: ${{ matrix.platform == 'windows-latest' }}
        run: npm run tauri build -- --no-sign --target x86_64-pc-windows-msvc

      - name: Run Compilation Check (Linux/macOS)
        if: ${{ matrix.platform != 'windows-latest' }}
        run: cargo build --release
